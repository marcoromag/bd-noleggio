{"version":3,"sources":["GlobalContext.tsx","config.ts","api/api-fetch.ts","api/LoginAPI.ts","components/DisplayError.tsx","pages/Login.tsx","components/PrivateRoute.tsx","api/BatchAPI.ts","components/BatchView.tsx","api/ConfigAPI.ts","components/SelectFornitore.tsx","pages/BatchScarico.tsx","components/Layout.tsx","pages/BatchCarico.tsx","api/VideoAPI.ts","components/SelezionaVideoPerTitolo.tsx","pages/RicercaPerTitolo.tsx","components/Loading.tsx","api/NoleggioAPI.ts","api/ClienteAPI.ts","components/SelezionaCliente.tsx","components/MostraDati.tsx","components/Steps.tsx","pages/Noleggio.tsx","pages/TerminaNoleggio.tsx","api/StatisticheAPI.ts","pages/StatisticheDipendente.tsx","components/RoutedNav.tsx","components/Header.tsx","App.tsx","serviceWorker.js","index.js","components/Steps.module.css"],"names":["initialState","login","isLoggedIn","setLogin","GlobalContext","React","useLogin","ctx","GlobalContextProvider","children","setState","state","Provider","value","apiBaseUrl","HttpError","httpCode","message","Error","apifetch","input","init","a","async","origHeaders","headers","postHeaders","includes","method","newInit","credentials","fetch","config","response","ok","status","json","error","messaggio","utente","password","body","JSON","stringify","DisplayError","Toast","ToastHeader","ToastBody","Login","setError","setLoginCtx","history","useHistory","runLogin","LoginAPI","user","push","changeUser","e","target","undefined","changePassword","buttonDisabled","Container","fluid","Row","Col","sm","md","lg","className","Card","CardBody","CardTitle","FormGroup","Label","for","Input","type","name","id","onChange","Button","disabled","color","onClick","PrivateRoute","rest","render","location","to","pathname","from","fornitore","lista","BatchView","batch","xs","batch_id","tipo","esito","data","impiegato","Table","supporti","map","s","key","seriale","video","data_carico","data_scarico","stato_fisico","SelectFornitore","onLoadError","listaFornitori","setFornitori","ConfigAPI","then","res","catch","f","nome","BatchScarico","setFornitore","risultato","setRisultato","changeFornitore","startBatch","BatchAPI","Form","Layout","titolo","errore","creaListaBatch","split","values","costo_supporto","parseFloat","BatchCarico","setLista","changeText","VideoView","onSelect","CardHeader","FormText","genere","regista","casa_produttrice","quantita_disponibile","SelezionaVideoPerTitolo","setTitolo","changeTitolo","search","VideoAPI","v","RicercaPerTitolo","Loading","Spinner","cod_fiscale","termine","supporto","id_noleggio","stato","cognome","SelezionaCliente","query","setQuery","listaClienti","setListaClienti","changeNome","changeCognome","ricerca","ClienteAPI","c","telefono_abitazione","telefono_cellulare","MostraTermineNoleggio","giorni","MostraCliente","cliente","MostraVideo","MostraSupporto","MostraNoleggio","noleggio","Steps","steps","corrente","stepClick","width","length","progressWidth","styles","style","transition","step","i","section","visited","current","SelezionaSupporto","listaSupporti","setListaSupporti","l","SelezionaTermineNoleggio","listaTerminiNoleggio","setlistaTerminiNoleggio","t","importo_iniziale","importo_gg_successivi","MostraDati","titoloStep","Noleggio","setStep","setCliente","setVideo","setSupporto","idNoleggio","setIdNoleggio","termineNoleggio","setTermineNoleggio","selezionaCliente","selezionaVideo","selezionaSupporto","selezionaTermineNoleggio","tn","confermaNoleggio","NoleggioAPI","SelezionaNoleggioPerCliente","listaNoleggiAttivi","setListaNoleggiAttivi","noleggi","n","data_inizio","data_fine","termine_noleggio","SelezionaStatoSupporto","setStato","changeStato","buttonClick","TerminaNoleggio","setNoleggio","costo","setCosto","selezionaNoleggio","selezionaStatoSupporto","isodate","date","offsetMs","getTimezoneOffset","msLocal","getTime","Date","toISOString","slice","StatisticaPerDipendenteView","stats","punto_vendita","matricola","num_noleggi","totale_incasso","StatisticheDipendente","oggi","loading","setLoading","giorno","setGiorno","setStats","changeGiorno","d","Array","isArray","leggiStatistica","StatisticheAPI","maxDate","RoutedDropdownItem","href","props","go","DropdownItem","Header","isOpen","setIsOpen","logoutClick","isAdmin","isOper","Navbar","light","expand","sticky","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","divider","App","basename","exact","path","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.044f3068.chunk.js","sourcesContent":["import * as React from 'react';\nimport { User } from './api/LoginAPI';\n\nexport interface LoginContext {\n    isLoggedIn: boolean,\n    user?: User\n}\n\nexport interface GlobalContext {\n    login: LoginContext;\n    setLogin: (login: LoginContext) => void;\n}\nconst initialState = {\n    login: {\n        isLoggedIn:false\n    },\n    setLogin: () => {}\n}\n\nconst GlobalContext = React.createContext<GlobalContext>(initialState);\n\n\nexport const useLogin = () => {\n    const ctx = React.useContext(GlobalContext);\n    return [ctx.login, ctx.setLogin] as [LoginContext,(v : LoginContext) => void]\n}\n\nexport const GlobalContextProvider : React.FC = ({children}) => {\n    const [state, setState] = React.useState<GlobalContext>({\n        ...initialState,\n        setLogin: (login) => {\n            setState({...state,login})\n        }\n    })\n\n    return <GlobalContext.Provider value={state}>\n        {children}\n    </GlobalContext.Provider>\n}\n","export default {\n    apiBaseUrl: '/noleggio/api'\n}","import config from \"../config\"\n\nexport interface HttpError extends Error {\n    httpCode: number\n}\n\n\nexport class HttpError extends Error {\n    httpCode : number;\n\n    constructor(httpCode: number, message?: string) {\n        super(message)\n        this.httpCode = httpCode\n    }\n}\n\nexport function isHttpError (e: Error) : e is HttpError {\n    return (e as any).httpCode !== undefined\n} \n\nexport default async function apifetch  (input: string, init?: RequestInit): Promise<Response> {\n\n    const origHeaders = init && init.headers\n\n    const postHeaders = init && ['POST','PUT','PATCH'].includes(init.method || 'GET')  && {\n        'Content-Type':'application/json',\n        'Accept':'application/json',\n    } \n\n    const newInit : RequestInit = {\n        ...init,\n        headers: {\n            ...postHeaders,\n            ...origHeaders\n        },\n        credentials: 'include'\n        \n    }\n\n    const response = await fetch(config.apiBaseUrl+input,newInit);\n\n    if (!response.ok) {\n        if (response.status >= 500)\n            throw new HttpError(response.status,\"Errore sul server\")\n        if (response.status >= 400 ) {\n            const error = await response.json();\n            throw new HttpError(response.status,error.messaggio)\n        }\n    }\n    return response;\n}","import apifetch from \"./api-fetch\"\n\nexport interface User {\n    matricola: string,\n    nome: string,\n    cognome: string,\n    tipo: 'DIRIGENTE' | 'IMPIEGATO',\n    punto_vendita: number\n}\n\nconst login = async (utente: string, password: string) => {\n    const response = await apifetch('/utente/login', {\n        method:'POST',\n        body:JSON.stringify({utente,password})\n    })\n\n    return response.json() as Promise<User>;\n}\nconst logout = async () => {\n    await apifetch('/utente/logout', {\n        method:'POST'\n    });\n}\n\nconst user = async () => {\n    const response = await apifetch('/utente', {\n        method:'GET'\n    })\n    return response.json() as Promise<User>;\n}\n\n\nexport default {\n    login,\n    logout,\n    user\n}","import * as React from 'react'\nimport { Toast, ToastHeader, ToastBody } from 'reactstrap'\n\n\nexport const DisplayError : React.FC<{error?:string}> = ({error}) => {\n  return error ?\n    <Toast>\n        <ToastHeader>\n            Attenzione\n        </ToastHeader>\n        <ToastBody>\n            {error}\n        </ToastBody>\n    </Toast>\n    : null\n}","import * as React from 'react'\nimport { FormGroup, Label, Input, Container, Row, Col, Button, Card, CardBody, CardTitle} from 'reactstrap'\nimport LoginAPI from '../api/LoginAPI';\nimport { useLogin } from '../GlobalContext';\nimport { useHistory } from 'react-router';\nimport { DisplayError } from '../components/DisplayError';\n\n\n\nexport const Login: React.FC = () => {\n    const [login, setLogin] = React.useState<{utente:string,password:string}>({utente:'', password:''});\n    const [error, setError] = React.useState<string>();\n    const [, setLoginCtx] = useLogin();\n    const history = useHistory();\n\n    const runLogin = React.useCallback(  async () => {\n        try {\n            const user = await LoginAPI.login(login.utente, login.password);\n            setLoginCtx({isLoggedIn:true, user});\n            history.push(\"/\");\n        } catch (e) {\n            setLoginCtx({isLoggedIn:false});\n            setError (e.message);\n        } \n    },[login, history, setLoginCtx]);\n\n    const changeUser = React.useCallback(  (e : React.ChangeEvent<HTMLInputElement>) => {\n        setLogin({...login, utente: e.target.value})\n        setError(undefined);\n    },[login]);\n\n    const changePassword = React.useCallback(  (e : React.ChangeEvent<HTMLInputElement>) => {\n        setLogin({...login, password: e.target.value})\n        setError(undefined);\n    },[login]);\n\n    const buttonDisabled = !login.utente || !login.password;\n\n\n    return (\n    <Container fluid>\n        <Row>\n            <Col sm=\"9\" md=\"7\" lg=\"5\" className=\"mx-auto my-5\">\n                <Card>\n                    <CardBody>\n                        <CardTitle><h5>Log In</h5></CardTitle>\n                        <DisplayError error={error}/>\n                        <FormGroup >\n                            <Label for=\"nomeUtente\">Nome utente</Label>\n                            <Input type=\"email\" name=\"user\" id=\"nomeUtente\" onChange={changeUser}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Password</Label>\n                            <Input type=\"password\" name=\"password\" id=\"password\" onChange={changePassword}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Button disabled={buttonDisabled} color=\"primary\" onClick={runLogin}>Accedi</Button>                    \n                        </FormGroup>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    </Container>\n    \n    )\n}","import * as React from 'react'\nimport { Route, RouteProps, Redirect } from 'react-router'\nimport { useLogin } from '../GlobalContext'\n\nexport const PrivateRoute : React.FC<RouteProps> = ({ children, ...rest }) => {\n    const [login] = useLogin()\n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          login.isLoggedIn ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />\n    )\n}","import apifetch from \"./api-fetch\";\n\nexport interface Supporto {\n    id: string,\n    seriale: string,\n    video: string,\n    fornitore: string,\n    punto_vendita: string,\n    data_carico: string,\n    data_scarico: string | null\n    stato_fisico: string\n}\nexport interface Batch {\n    batch_id: string,\n    tipo: 'CARICO' | 'SCARICO',\n    esito: string,\n    punto_vendita: number,\n    impiegato: string,\n    data: string,\n    supporti: Supporto[]\n}\n\nexport interface SupportoCarico {\n    video: string,\n    seriale: string,\n    costo_supporto: number\n}\n\nconst scarico = async (fornitore: string) => {\n    const response = await apifetch('/batch/scarico', {\n        method:'POST',\n        body:JSON.stringify({fornitore})\n    })\n    return response.json() as Promise<Batch>\n}\n\nconst carico = async (fornitore: string, lista: SupportoCarico[]) => {\n    const response = await apifetch('/batch/carico', {\n        method:'POST',\n        body:JSON.stringify({\n            fornitore,\n            lista\n        })\n    })\n    return response.json() as Promise<Batch>\n}\n\nexport default {\n    scarico,\n    carico\n}\n\n\n","import * as React from 'react'\nimport { Row, Col, Table, Card, CardBody } from 'reactstrap'\nimport { Batch } from '../api/BatchAPI'\n\nexport const BatchView : React.FC<{batch: Batch}> = ({batch}) => {\n    return  <>\n            <Col xs=\"6\" sm=\"3\">Batch id</Col>\n            <Col xs=\"6\" sm=\"9\">{batch.batch_id}</Col>\n\n            <Col xs=\"6\" sm=\"3\">Tipo</Col>\n            <Col xs=\"6\" sm=\"9\">{batch.tipo}</Col>\n\n            <Col xs=\"6\" sm=\"3\">Esito</Col>\n            <Col xs=\"6\" sm=\"9\">{batch.esito}</Col>\n\n            <Col xs=\"6\" sm=\"3\">Data</Col>\n            <Col xs=\"6\" sm=\"9\">{batch.data}</Col>\n\n            <Col xs=\"6\" sm=\"3\">Impiegato</Col>\n            <Col xs=\"6\" sm=\"9\">{batch.impiegato}</Col>\n            <Col xs=\"12\"><h2>Supporti</h2></Col>\n            <Col xs=\"12\">\n            <Table>\n                <thead>\n                    <tr>\n                        <th>id</th>\n                        <th>Seriale</th>\n                        <th>Video</th>\n                        <th>Fornitore</th>\n                        <th>Data Carico</th>\n                        <th>Data Scarico</th>\n                        <th>Stato fisico</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {batch.supporti && batch.supporti.map( s => \n                        <tr key={s.id}>\n                            <th>{s.id}</th>\n                            <td>{s.seriale}</td>\n                            <td>{s.video}</td>\n                            <td>{s.fornitore}</td>\n                            <td>{s.data_carico}</td>\n                            <td>{s.data_scarico}</td>\n                            <td>{s.stato_fisico}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </Table>\n            </Col>\n        </>\n        \n}\n","import apifetch from \"./api-fetch\"\n\nexport interface Fornitore {\n    id: string,\n    nome: string\n}\n\nexport interface TermineNoleggio {\n    giorni: number,\n    importo_iniziale: number,\n    importo_gg_successivi: number\n}\n\nexport interface Genere {\n    id: string,\n    nome: string\n}\n\nconst listaFornitori = async () => {\n    const response = await apifetch('/fornitori', {\n        method:'GET'\n    })\n    return response.json() as Promise<Fornitore[]>\n}\n\nconst listaTermini = async () => {\n    const response = await apifetch('/termini_noleggio', {\n        method:'GET'\n    })\n    return response.json() as Promise<TermineNoleggio[]>\n}\n\nconst listaGeneri = async () => {\n    const response = await apifetch('/generi', {\n        method:'GET'\n    })\n    return response.json() as Promise<Genere[]>\n}\n\nexport default {\n    listaFornitori,\n    listaTermini,\n    listaGeneri\n}","import * as React from 'react'\nimport { Input, InputProps } from 'reactstrap'\nimport ConfigAPI, { Fornitore } from '../api/ConfigAPI';\n\n\n\nexport const SelectFornitore : React.FC<InputProps & {onLoadError?: (error: string) => void}> = ({onLoadError, ...rest}) => {\n    const [listaFornitori, setFornitori] = React.useState<Fornitore[]>();\n\n    React.useEffect( () => {\n        ConfigAPI.listaFornitori().then (res => {\n            setFornitori(res);\n        }).catch(e => {\n            onLoadError && onLoadError (e.message);\n        })\n    },[])\n\n    return  <Input {...rest} type=\"select\">\n        {listaFornitori && listaFornitori.map( f => <option key={f.id} value={f.id}>{f.nome}</option>)}\n    </Input>\n}\n","import * as React from 'react'\nimport { Container, Row, Col, Button, Form, FormGroup, Label } from 'reactstrap'\nimport BatchAPI, { Batch } from '../api/BatchAPI'\nimport { DisplayError } from '../components/DisplayError'\nimport { BatchView } from '../components/BatchView'\nimport { SelectFornitore } from '../components/SelectFornitore'\n\nexport const BatchScarico : React.FC = () => {\n\n\n    const [error, setError] = React.useState<string>()\n    const [fornitore, setFornitore] = React.useState<string>();\n    const [risultato, setRisultato] = React.useState<Batch>();\n\n    const changeFornitore = React.useCallback( (e: React.ChangeEvent<HTMLInputElement>) => {\n        setFornitore(e.target.value);\n    },[])\n\n    const startBatch = React.useCallback( async () => {\n        try {\n            setRisultato (await BatchAPI.scarico(fornitore!));\n        } catch (e) {\n            setError(e.message);\n        }\n\n    },[fornitore])\n\n    return <Container>\n        <Row>\n            <Col xs=\"12\"><h1>Batch di scarico</h1></Col>\n            <Col xs=\"12\"><p>Per iniziare un batch di scarico, seleziona il fornitore</p></Col>\n            <Col xs=\"12\">\n            <DisplayError error={error}/>\n            <Form>\n                    <FormGroup>\n                        <Label for=\"password\">Fornitore</Label>\n                        <SelectFornitore onChange={changeFornitore} onLoadError={setError}/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Button disabled={!fornitore} onClick={startBatch}>Avvia esecuzione</Button>\n                    </FormGroup>\n                    \n            </Form>\n            </Col>\n        </Row>\n        {risultato && <BatchView batch={risultato}/>}\n    </Container>\n\n\n}","import React from 'react'\nimport {Container, Row, Col} from 'reactstrap'\nimport { DisplayError } from './DisplayError'\n\ninterface LayoutProps {\n    titolo?: string\n    errore? : string\n}\n\nexport const Layout : React.FC<LayoutProps> = ({titolo, errore, children}) => {\n\n    return (\n    <Container>\n            <Row>\n                {titolo && <Col xs=\"12\"><h1>{titolo}</h1></Col>}\n                {<Col xs=\"12\"><DisplayError error={errore}/></Col>}\n            </Row>\n            <Row>\n                {children}\n            </Row>\n    </Container>\n\n    )\n}","import * as React from 'react'\nimport { Container, Row, Col, Button, Form, FormGroup, Label, Input } from 'reactstrap'\nimport BatchAPI, { Batch, SupportoCarico } from '../api/BatchAPI'\nimport { DisplayError } from '../components/DisplayError'\nimport { BatchView } from '../components/BatchView'\nimport { SelectFornitore } from '../components/SelectFornitore'\nimport { Layout } from '../components/Layout'\nimport { number } from 'prop-types'\n\n\n\nconst creaListaBatch = (lista: string) => {\n    const entries = lista.split('\\n');\n    return entries.map(e =>{\n        const values = e.split(',');\n        return {\n            video: values[0],\n            seriale: values[1],\n            costo_supporto: parseFloat(values[3])\n        } as SupportoCarico\n    })\n}\n\nexport const BatchCarico : React.FC = () => {\n\n    const [error, setError] = React.useState<string>()\n    const [fornitore, setFornitore] = React.useState<string>();\n    const [lista, setLista] = React.useState<string>();\n    const [risultato, setRisultato] = React.useState<Batch>();\n\n    const changeFornitore = React.useCallback( (e: React.ChangeEvent<HTMLInputElement>) => {\n        setFornitore(e.target.value);\n    },[])\n\n    const changeText = React.useCallback( (e: React.ChangeEvent<HTMLInputElement>) => {\n        setLista(e.target.value);\n    },[])\n\n    const startBatch = React.useCallback( async () => {\n        try {\n            const data = creaListaBatch(lista!);\n            setRisultato (await BatchAPI.carico(fornitore!, data));\n        } catch (e) {\n            setError(e.message);\n        }\n\n    },[fornitore, lista])\n\n    return <Layout titolo=\"Batch di carico\" errore={error}>\n            <Col xs=\"12\">\n                <Form>\n                        <FormGroup>\n                            <Label>Fornitore</Label>\n                            <SelectFornitore onChange={changeFornitore} onLoadError={setError}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label>Lista dei video da caricare</Label>\n                            <Input type=\"textarea\" onChange={changeText}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <Button disabled={!fornitore || !lista } onClick={startBatch}>Avvia esecuzione</Button>\n                        </FormGroup>\n\n                        \n                </Form>\n            </Col>\n            {risultato && <BatchView batch={risultato}/>}\n    </Layout>\n\n\n}","import apifetch from \"./api-fetch\";\n\nexport interface Video {\n    id: string,\n    genere: string,\n    tipo: string,\n    titolo: string,\n    regista: string,\n    casa_produttrice: string,\n    data_disponibilita?: string\n    quantita_disponibile: number\n}\n\nexport interface Supporto {\n    id: string\n}\n\nexport interface SupportoCarico {\n    video: string,\n    seriale: string,\n    costo_supporto: number\n}\n\nconst ricercaPerTitolo = async (titolo: string) => {\n    const response = await apifetch(`/catalogo/ricerca/titolo?titolo=${titolo}`, {\n        method:'GET',\n    })\n    return response.json() as Promise<Video[]>\n}\n\nconst ricercaPerGenere = async (genere: string) => {\n    const response = await apifetch(`/catalogo/ricerca/genere?genere=${genere}`, {\n        method:'GET',\n    })\n    return response.json() as Promise<Video[]>\n}\n\nconst listaSupporti = async (video: string) =>  {\n    const response = await apifetch(`/video/${video}/supporti`, {\n        method:'GET',\n    })\n    return response.json() as Promise<Supporto[]>\n}\n\nexport default {\n    ricercaPerTitolo,\n    ricercaPerGenere,\n    listaSupporti\n}\n\n\n","import * as React from 'react'\nimport VideoAPI, { Video } from '../api/VideoAPI';\nimport { Row, Col, FormGroup, Label, Input, Button, FormText, Card, CardBody, CardHeader } from 'reactstrap';\nimport { DisplayError } from '../components/DisplayError';\n\nexport const VideoView : React.FC<{video: Video, onSelect? : (video: Video) => void}> = ({video, onSelect}) => {\n    const onClick = React.useCallback( () => {\n        onSelect && onSelect(video);\n    }, [video, onSelect])\n\n    return <Card className=\"mb-4\">\n        <CardHeader>\n            <h5>{video.titolo}</h5>\n            {onSelect && <Button className=\"ml-auto\" onClick={onClick}>Seleziona</Button>}\n        </CardHeader>\n        <CardBody>\n        <Row>\n        <Col xs=\"12\" sm=\"4\">\n            <FormText>Id</FormText>\n            <p>{video.id}</p>\n        </Col>\n        <Col xs=\"12\" sm=\"4\">\n            <FormText>Genere</FormText>\n            <p>{video.genere}</p>\n        </Col>\n        <Col xs=\"12\" sm=\"4\">\n            <FormText>Regista</FormText>\n            <p>{video.regista}</p>\n        </Col>\n        <Col xs=\"12\" sm=\"4\">\n            <FormText>Casa produttrice</FormText>\n            <p>{video.casa_produttrice}</p>\n        </Col>\n        <Col xs=\"12\" sm=\"4\">\n            <FormText>Quantità disponibile</FormText>\n            <p>{video.quantita_disponibile}</p>\n        </Col>\n        </Row>\n        </CardBody>\n    </Card>\n}\n\n\nexport const SelezionaVideoPerTitolo : React.FC<{onSelect? : (video: Video) => void}> = ({onSelect}) => {\n    const [error, setError] = React.useState<string>()\n    const [titolo, setTitolo] = React.useState<string>()\n    const [risultato, setRisultato] = React.useState<Video[]>();\n\n    const changeTitolo = React.useCallback( (e: React.ChangeEvent<HTMLInputElement>) => {\n        setTitolo(e.target.value);\n    },[])\n\n    const search = React.useCallback( async () => {\n        try {\n            setRisultato (await VideoAPI.ricercaPerTitolo(titolo!));\n        } catch (e) {\n            setError(e.message);\n        }\n    },[titolo])\n\n    return <>\n        <Col xs=\"12\">\n            <DisplayError error={error}/>\n            <Row>\n                <Col xs=\"12\" sm>\n                    <FormGroup>\n                        <Label>Titolo</Label>\n                        <Input type=\"text\" onChange={changeTitolo}/>\n                    </FormGroup>\n                </Col>\n                <Col xs=\"12\" sm=\"auto\" className=\"d-flex align-items-end\">\n                    <FormGroup>\n                        <Button disabled={!titolo} onClick={search}>Cerca</Button>\n                    </FormGroup>\n                </Col>\n            </Row>\n        </Col>\n        <Col xs=\"12\">\n            {risultato && risultato.map (v => <VideoView key={v.id} video={v} onSelect={onSelect}/>)}\n        </Col>\n    </>\n        \n} ","import * as React from 'react'\nimport { Container, Row, Col} from 'reactstrap';\nimport { SelezionaVideoPerTitolo } from '../components/SelezionaVideoPerTitolo';\n\nexport const RicercaPerTitolo : React.FC = () => {\n    return <Container>\n        <Row>\n            <Col xs=\"12\"><h1>Ricerca per titolo</h1></Col>\n            <SelezionaVideoPerTitolo/>\n        </Row>\n    </Container>\n}","import * as React from 'react'\nimport { Spinner } from 'reactstrap'\n\nexport const Loading : React.FC = () => {\n    return <Spinner className=\"mx-auto\" color=\"info\"/>\n}","import apifetch from \"./api-fetch\"\n\n\nexport interface NoleggioAttivo {\n    id: string,\n    supporto: string,\n    cliente: string,\n    impiegato: string,\n    data_inizio: string,\n    data_fine: string,\n    termine_noleggio: number,\n    video: string,\n    titolo: string\n}\n\nexport type StatoSupporto= 'BUONO' | 'DANNEGGIATO'\n\nconst attiva = async (cod_fiscale: string, termine: number, supporto: string) => {\n    const response = await apifetch('/noleggio', {\n        method:'POST',\n        body:JSON.stringify({\n            cod_fiscale,\n            termine,\n            supporto\n        })\n    })\n    return response.json() as Promise<string>    \n}\n\nconst termina = async (id_noleggio: string, stato: StatoSupporto) => {\n    const response = await apifetch(`/noleggio/${id_noleggio}`, {\n        method:'POST',\n        body:JSON.stringify({\n            stato\n        })\n    })\n    return response.json() as Promise<number>    \n}\n\n\nconst noleggiAttiviPerCliente = async (cod_fiscale:string) => {\n    const response = await apifetch(`/cliente/${cod_fiscale}/noleggi`, {\n        method:'GET'\n    })\n    return response.json() as Promise<NoleggioAttivo[]>    \n}\n\n\nexport default {\n    attiva,\n    termina,\n    noleggiAttiviPerCliente\n}","import apifetch from \"./api-fetch\"\n\nexport interface Cliente {\n    cod_fiscale: string,\n    nome: string,\n    cognome: string,\n    telefono_abitazione: string,\n    telefono_cellulare: string,\n    email: string,\n    data_sottoscrizione: string,\n    posizione_archivio: string,\n}\n\n\nconst ricerca = async (nome: string, cognome: string) => {\n    const response = await apifetch(`/cliente?nome=${nome}&cognome=${cognome}`, {\n        method:'GET'\n    })\n    return response.json() as Promise<Cliente[]>\n}\n\nexport default {\n    ricerca\n}\n","import * as React from 'react'\nimport { Col, FormGroup, Input, Label, Button, Table, Row} from 'reactstrap';\nimport ClienteAPI, { Cliente } from '../api/ClienteAPI';\n\n\nexport const SelezionaCliente : React.FC<{onSelect: (cliente: Cliente) => void}> = ({onSelect}) => {\n\n    const [query, setQuery] = React.useState({nome:'', cognome:''});\n    const [listaClienti, setListaClienti] = React.useState<Cliente[]>()\n    const changeNome = React.useCallback( (e : React.ChangeEvent<HTMLInputElement>) => setQuery({...query, nome: e.target.value}), [query])\n    const changeCognome = React.useCallback( (e : React.ChangeEvent<HTMLInputElement>) => setQuery({...query, cognome: e.target.value}), [query])\n    const ricerca = React.useCallback( async ()=>{\n        const lista = await ClienteAPI.ricerca(query.cognome, query.nome);\n        setListaClienti(lista);\n    },[query])\n\n    return <>\n    <Col xs=\"12\">\n        <Row>\n            <Col xs=\"12\" sm=\"\">\n                <FormGroup>\n                    <Label>Cognome</Label>\n                    <Input type=\"text\" onChange={changeNome}/>\n                </FormGroup>\n            </Col>\n            <Col xs=\"12\" sm=\"4\">\n                <FormGroup>\n                    <Label>Nome</Label>\n                    <Input type=\"text\" onChange={changeCognome}/>\n                </FormGroup>\n            </Col>\n            <Col xs=\"12\" sm=\"auto\" className=\"d-flex align-items-end\">\n                <FormGroup>\n                    <Button disabled={!query.nome && !query.cognome } onClick={ricerca}>Cerca</Button>\n                </FormGroup>\n            </Col>\n        </Row>\n    </Col>\n    {listaClienti && \n    <Col xs=\"12\">\n        <Table>\n            <thead>\n                <tr>\n                    <th>Nome</th>\n                    <th>Cognome</th>\n                    <th>Codice fiscale</th>\n                    <th>Telefono abitazione</th>\n                    <th>Telefono cellulare</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {listaClienti.map( c => \n                    <tr key={c.cod_fiscale}>\n                        <td>{c.nome}</td>\n                        <td>{c.cognome}</td>\n                        <td>{c.cod_fiscale}</td>\n                        <td>{c.telefono_abitazione}</td>\n                        <td>{c.telefono_cellulare}</td>\n                        <td><Button onClick={() => onSelect(c)}>Seleziona</Button></td>\n                    </tr>\n                )}\n            </tbody>\n        </Table>\n    </Col>\n    }\n    </>\n}","import * as React from 'react'\nimport { TermineNoleggio } from \"../api/ConfigAPI\"\nimport { CardHeader, CardBody, Card } from \"reactstrap\"\nimport { Cliente } from \"../api/ClienteAPI\"\nimport { Video, Supporto } from '../api/VideoAPI'\nimport { NoleggioAttivo } from '../api/NoleggioAPI'\n\nexport const MostraTermineNoleggio : React.FC<{termine: TermineNoleggio}> = ({termine}) => {\n    return <Card>\n        <CardHeader>\n            <h5>Termine di noleggio</h5>\n        </CardHeader>\n        <CardBody>\n        {termine.giorni} giorni\n        </CardBody>\n    </Card>\n\n}\n\nexport const MostraCliente: React.FC<{cliente: Cliente}> =({cliente}) => {\n    return <Card>\n        <CardHeader>\n            <h5>Cliente</h5>\n        </CardHeader>\n        <CardBody>\n            {cliente.cognome} {cliente.nome}\n        </CardBody>\n    </Card>\n}\n\nexport const MostraVideo: React.FC<{video: Video}> =({video}) => {\n    return <Card>\n        <CardHeader>\n            <h5>Video</h5>\n        </CardHeader>\n        <CardBody>\n        {video.titolo}\n        </CardBody>\n    </Card>\n}\n\nexport const MostraSupporto: React.FC<{supporto: Supporto}> =({supporto}) => {\n    return <Card>\n        <CardHeader>\n            <h5>Supporto</h5>\n        </CardHeader>\n        <CardBody>\n        {supporto.id}\n        </CardBody>\n    </Card>\n}\n\nexport const MostraNoleggio: React.FC<{noleggio: NoleggioAttivo}> =({noleggio}) => {\n    return <Card>\n        <CardHeader>\n            <h5>Noleggio</h5>\n        </CardHeader>\n        <CardBody>\n        {noleggio.id}\n        </CardBody>\n    </Card>\n}","import * as React from 'react'\nimport { Col } from \"reactstrap\"\n\nimport styles from './Steps.module.css'\n\n\n\nexport const Steps : React.FC<{steps: string[], corrente: number, stepClick?: (step:number) => void}> = ({steps, corrente, stepClick}) => {\n    const width = `${100/steps.length}%`\n    const progressWidth = `${100 * (corrente) / (steps.length-1)}%`\n    return <Col xs=\"12\">\n        <div className={styles['progress-bar-wrapper']}>\n            <div className={styles['status-bar']} style={{width: \"80%\"}}>\n                <div className={styles['current-status']} style={{width: progressWidth, transition: \"width 1000ms linear 0s\"}}></div>\n            </div>\n            <ul className={styles['progress-bar']} >\n                {steps.map ((step,i) => \n                <li className={`${styles.section} ${i<=corrente && styles.visited} ${i==corrente && styles.current}`} \n                    style={{width}}\n                    onClick={ stepClick && (() => {i<corrente && stepClick(i)}) }>{step}</li>\n                )}\n            </ul>\n        </div>\n        </Col>\n}","import * as React from 'react'\nimport {  Row, Col, Button, Table, CardHeader, Card, CardBody, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport VideoAPI, { Video, Supporto } from '../api/VideoAPI';\nimport { Cliente } from '../api/ClienteAPI';\nimport ConfigAPI, { TermineNoleggio } from '../api/ConfigAPI';\nimport { Loading } from '../components/Loading';\nimport NoleggioAPI from '../api/NoleggioAPI';\nimport { SelezionaVideoPerTitolo } from '../components/SelezionaVideoPerTitolo';\nimport { SelezionaCliente } from '../components/SelezionaCliente';\nimport { MostraCliente, MostraVideo, MostraTermineNoleggio, MostraSupporto } from '../components/MostraDati';\nimport { Layout } from '../components/Layout';\nimport { Steps } from '../components/Steps';\n\n\nconst SelezionaSupporto: React.FC<{video: string, onSelect: (supporto: Supporto) => void}> = ({video,onSelect}) => {\n    const [listaSupporti, setListaSupporti] = React.useState<Supporto[]>();\n    React.useEffect( ()=>{\n        VideoAPI.listaSupporti(video).then (l => {\n            setListaSupporti(l);\n        });\n    },[])\n\n    return (listaSupporti && listaSupporti.length) ?\n        <Col xs=\"12\">\n            <Table>\n                <thead>\n                    <tr>\n                        <th>ID Supporto</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {listaSupporti.map( c => \n                        <tr key={c.id}>\n                            <td>{c.id}</td>\n                            <td><Button onClick={() => onSelect(c)}>Seleziona</Button></td>\n                        </tr>\n                    )}\n                </tbody>\n            </Table>\n        </Col>\n        :<p>Nessun supporto</p>\n}\n\nconst SelezionaTermineNoleggio : React.FC<{onSelect: (tn: TermineNoleggio) => void}> = ({onSelect}) => {\n\n    const [listaTerminiNoleggio, setlistaTerminiNoleggio] = React.useState<TermineNoleggio[]>();\n    React.useEffect( ()=>{\n        ConfigAPI.listaTermini().then (l => {\n            setlistaTerminiNoleggio(l);\n        });\n    },[])\n\n    return listaTerminiNoleggio ? <>\n        {listaTerminiNoleggio.map(t => \n        <Col xs=\"3\">\n            <Card>\n                <CardHeader>\n                    {t.giorni} giorni\n                </CardHeader>\n                <CardBody>\n                    <p><strong>Costo fisso:</strong> {t.importo_iniziale}</p>\n                    <p><strong>Costo per ogni giorno successivo:</strong> {t.importo_gg_successivi}</p>\n                    <Button onClick={() => onSelect(t)}>Seleziona</Button>\n                </CardBody>\n            </Card>\n        </Col>  \n        )}</> \n        : <Loading/>\n}\n\n\n\nconst MostraDati: React.FC<{cliente?: Cliente, video?: Video, supporto?: Supporto, termine?: TermineNoleggio}> = ({cliente, video, supporto, termine}) => {\n    return (cliente || video || supporto || termine) ? \n    <Col xs=\"12\">\n        <Row className=\"bg-warning p-3 align-items-stretch mb-4\">\n        {cliente && <Col xs=\"12\" sm=\"4\"><MostraCliente cliente={cliente}/></Col>}\n        {video && <Col xs=\"12\" sm=\"4\"><MostraVideo video={video}/></Col>}\n        {supporto && <Col xs=\"12\" sm=\"4\"><MostraSupporto supporto={supporto}/></Col>}\n        {termine && <Col xs=\"12\" sm=\"4\"><MostraTermineNoleggio termine={termine}/></Col>}\n        </Row>\n    </Col>\n    : null\n}\n\n\n\nconst titoloStep = [\n    'Seleziona il cliente',\n    'Seleziona il video',\n    'Seleziona il supporto',\n    'Seleziona il termine di noleggio',\n    'Conferma i dati di noleggio',\n    'Completato'\n]\n\nexport const Noleggio : React.FC = () => {\n    const [error, setError] = React.useState<string>()\n    const [step,setStep] = React.useState(0);\n    const [cliente, setCliente] = React.useState<Cliente>();\n    const [video, setVideo] = React.useState<Video>();\n    const [supporto, setSupporto] = React.useState<Supporto>();\n    const [idNoleggio, setIdNoleggio] = React.useState<string>();\n    const [termineNoleggio, setTermineNoleggio] = React.useState<TermineNoleggio>();\n\n\n\n    const selezionaCliente = React.useCallback( (cliente:Cliente) => {\n        setCliente(cliente);\n        setStep(1);\n    },[]);\n\n    const selezionaVideo = React.useCallback( (video:Video) => {\n        setVideo(video);\n        setStep(2);\n    },[]);\n\n    const selezionaSupporto = React.useCallback( (supporto:Supporto) => {\n        setSupporto(supporto);\n        setStep(3);\n    },[]);\n\n    const selezionaTermineNoleggio = React.useCallback( (tn:TermineNoleggio) => {\n        setTermineNoleggio(tn);\n        setStep(4);\n    },[]);\n\n    //resetta i dati quando si torna indietro\n    React.useEffect( () => {\n        switch (step) {\n            case 0: setCliente(undefined)\n            case 1: setVideo(undefined)\n            case 2: setSupporto(undefined);\n            case 3: setTermineNoleggio(undefined);\n        }\n    },[step])\n\n    const confermaNoleggio = React.useCallback( async () => {\n        try {\n            setError(undefined);\n            const id_noleggio = await NoleggioAPI.attiva(cliente!.cod_fiscale, termineNoleggio!.giorni, supporto!.id);\n            setIdNoleggio(id_noleggio);\n            setStep(5);\n        } catch (e) {\n            setError (e.message);\n        }\n    },[cliente, termineNoleggio, supporto]);\n    \n    return <Layout titolo=\"Attiva noleggio\" errore={error}>\n        <Steps steps={titoloStep} corrente={step} stepClick={setStep}/>\n        <MostraDati cliente={cliente} video={video} supporto={supporto} termine={termineNoleggio}/>\n        {step === 0 && <SelezionaCliente onSelect={selezionaCliente}/>}\n        {step === 1 && <SelezionaVideoPerTitolo onSelect={selezionaVideo}/> }\n        {step === 2 && <SelezionaSupporto video={video!.id} onSelect={selezionaSupporto}/>}\n        {step === 3 && <SelezionaTermineNoleggio onSelect={selezionaTermineNoleggio}/>}\n        {step === 4 && <Col xs=\"12\"><Button onClick={confermaNoleggio}>Conferma il noleggio</Button></Col>}\n        {step === 5 && <Col xs=\"12\">Noleggio confermato con ID {idNoleggio}</Col>}\n    </Layout>\n\n\n}","import * as React from 'react'\nimport { Container, Row, Col, Button, Table, Input, FormGroup, Label} from 'reactstrap';\nimport { DisplayError } from '../components/DisplayError';\nimport { Cliente } from '../api/ClienteAPI';\nimport { Loading } from '../components/Loading';\nimport NoleggioAPI, { NoleggioAttivo, StatoSupporto } from '../api/NoleggioAPI';\nimport { SelezionaCliente } from '../components/SelezionaCliente';\nimport { MostraCliente, MostraNoleggio } from '../components/MostraDati';\nimport { Steps } from '../components/Steps';\nimport { Layout } from '../components/Layout';\n\n\nconst SelezionaNoleggioPerCliente : React.FC<{cod_fiscale: string, onSelect: (na: NoleggioAttivo) => void}> = ({cod_fiscale,onSelect}) => {\n\n    const [listaNoleggiAttivi, setListaNoleggiAttivi] = React.useState<NoleggioAttivo[]>();\n    React.useEffect( ()=>{\n        NoleggioAPI.noleggiAttiviPerCliente(cod_fiscale).then (noleggi => {\n            setListaNoleggiAttivi(noleggi);\n        })\n    },[cod_fiscale])\n\n    return listaNoleggiAttivi ? <Col xs=\"12\">\n        <Table>\n            <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Data inizio</th>\n                    <th>Data fine</th>\n                    <th>Termine noleggio</th>\n                    <th>Titolo</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n            {listaNoleggiAttivi.map(n => \n                <tr key={n.id}>\n                    <td>{n.data_inizio}</td>\n                    <td>{n.data_fine}</td>\n                    <td>{n.termine_noleggio} giorni</td>\n                    <td>{n.titolo}</td>\n                    <td><Button onClick={() => onSelect(n)}>Seleziona</Button></td>\n                </tr>\n            )}\n            </tbody>\n        </Table>   \n    </Col> \n    : <Loading/>\n}\n\nconst SelezionaStatoSupporto : React.FC<{onSelect: (stato: StatoSupporto) => void}> = ({onSelect}) => {\n  const [stato, setStato] = React.useState<StatoSupporto>();\n  const changeStato = React.useCallback( (e:React.ChangeEvent<HTMLInputElement>) => {\n    setStato(e.target.value as StatoSupporto)\n  },[])\n  const buttonClick = React.useCallback( () => {\n    stato && onSelect(stato);\n  },[stato, onSelect])\n\n  return <Col xs=\"12\">\n        <FormGroup>\n            <Label>Stato del supporto</Label>\n            <Input type=\"select\" onChange={changeStato}>   \n                {!stato && <option id=\"\">Seleziona</option>}\n                <option value=\"BUONO\">Buono stato</option>\n                <option value=\"DANNEGGIATO\">Supporto danneggiato</option>\n            </Input>\n        </FormGroup>\n        <FormGroup>\n            <Button disabled={!stato} onClick={buttonClick}>Conferma la restituzione del supporto</Button>\n        </FormGroup>\n    </Col>\n  \n}\n\nconst MostraDati: React.FC<{cliente?: Cliente, noleggio?: NoleggioAttivo}> = ({cliente, noleggio}) => {\n    return (cliente || noleggio) ?\n    <Col xs=\"12\">\n        <Row className=\"bg-warning p-3 align-items-stretch mb-4\">\n            {cliente && <Col xs=\"12\" sm=\"6\"><MostraCliente cliente={cliente}/></Col>}\n            {noleggio && <Col xs=\"12\" sm=\"6\"><MostraNoleggio noleggio={noleggio}/></Col>}\n        </Row>\n    </Col>\n    : null\n}\n\nconst titoloStep = [\n    'Seleziona il cliente',\n    'Seleziona il noleggio',\n    'Seleziona lo stato del supporto',\n    'Completato'\n]\n\nexport const TerminaNoleggio : React.FC = () => {\n    const [error, setError] = React.useState<string>()\n    const [step,setStep] = React.useState(0);\n    const [cliente, setCliente] = React.useState<Cliente>();\n    const [noleggio, setNoleggio] = React.useState<NoleggioAttivo>();\n    const [costo, setCosto] = React.useState<number>();\n\n    const selezionaCliente = React.useCallback( (cliente:Cliente) => {\n        setCliente(cliente);\n        setStep(1);\n    },[]);\n\n    const selezionaNoleggio = React.useCallback( (n:NoleggioAttivo) => {\n        setNoleggio(n);\n        setStep(2);\n    },[]);\n\n    const selezionaStatoSupporto = React.useCallback( async (stato:StatoSupporto) => {\n        try {\n            setError(undefined);\n            const costo = await NoleggioAPI.termina(noleggio!.id, stato);\n            setCosto(costo);\n            setStep(3);\n        } catch (e) {\n            setError (e.message);\n        }\n    },[noleggio]);\n\n    //resetta i dati quando si torna indietro\n    React.useEffect( () => {\n        switch (step) {\n            case 0: setCliente(undefined)\n            case 1: setNoleggio(undefined)\n        }\n    },[step])\n\n    return <Layout titolo=\"Termina noleggio\" errore={error}>\n        <Steps steps={titoloStep} corrente={step} stepClick={setStep}/>\n        <MostraDati cliente={cliente} noleggio={noleggio}/>\n        {step === 0 && <SelezionaCliente onSelect={selezionaCliente}/>}\n        {step === 1 && <SelezionaNoleggioPerCliente cod_fiscale={cliente!.cod_fiscale} onSelect={selezionaNoleggio}/> }\n        {step === 2 && <SelezionaStatoSupporto onSelect={selezionaStatoSupporto}/>}\n        {step === 3 && <Col xs=\"12\"><p>Noleggio completato. Costo: {costo}</p></Col>}\n    </Layout>\n  \n\n\n\n}","import apifetch from \"./api-fetch\"\n\nexport interface StatPerDipendente {\n    punto_vendita: number,\n    matricola: string,\n    nome: string,\n    cognome: string,\n    totale_incasso: number,\n    num_noleggi: number\n\n}\n\nconst isodate = (date: Date) => {\n    const offsetMs = date.getTimezoneOffset() * 60 * 1000;\n    const msLocal =  date.getTime() - offsetMs;\n    const dateLocal = new Date(msLocal);\n    return dateLocal.toISOString().slice(0, 10);\n}\nconst perDipendente = async (data: Date) => {\n    const response = await apifetch(`/statistiche/${isodate(data)}/impiegati`, {\n        method:'GET'\n    })\n    return response.json() as Promise<StatPerDipendente[]>     \n} \n\nexport default {\n    perDipendente\n}","import * as React from 'react'\nimport DatePicker from 'react-date-picker'\nimport { Container, Col, Row, FormGroup, Label, Button, Table } from 'reactstrap'\nimport { DisplayError } from '../components/DisplayError'\nimport './StatisticheDipendente.css'\nimport StatisticheAPI, { StatPerDipendente } from '../api/StatisticheAPI'\nimport { Loading } from '../components/Loading'\n\nexport const StatisticaPerDipendenteView : React.FC<{stats: StatPerDipendente[]}> = ({stats}) => {\n    return <Col xs=\"12\">\n        <Table>\n            <thead>\n                <tr>\n                    <th>Punto vendita</th>\n                    <th>Matricola</th>\n                    <th>Nome</th>\n                    <th>Numero noleggi</th>\n                    <th>Totale incasso</th>\n                </tr>\n            </thead>\n            <tbody>\n                {stats.map( s => \n                    <tr key={s.punto_vendita}>\n                        <td>{s.matricola}</td>\n                        <td>{s.cognome} {s.nome}</td>\n                        <td>{s.num_noleggi}</td>\n                        <td>{s.totale_incasso}</td>\n                    </tr>\n                )}\n            </tbody>\n        </Table>\n    </Col>\n}\n\nexport const StatisticheDipendente : React.FC = () => {\n    const oggi = React.useMemo( ()=> new Date(), [])\n    const [error, setError] = React.useState<string>()\n    const [loading, setLoading] = React.useState(false)\n    const [giorno, setGiorno] = React.useState<Date>()\n    const [stats, setStats] = React.useState<StatPerDipendente[]>()\n\n    const changeGiorno = React.useCallback( (d: Date | Date[]) => {\n        if (Array.isArray(d)) return;\n        setGiorno(d);\n        setStats(undefined);\n    },[])\n\n\n    const leggiStatistica = React.useCallback ( async ()=> {\n        try {\n            setLoading(true)\n            const s = await StatisticheAPI.perDipendente(giorno!);\n            setStats(s);\n            setLoading(false)\n        } catch (e) {\n            setError(e);\n            setLoading(false);\n        }\n\n    },[giorno])\n\n    return <Container>\n        <Row>\n            <Col xs=\"12\"><h1>Statistiche per dipendente</h1></Col>\n            <Col xs=\"12\">\n                <DisplayError error={error}/>\n            </Col>\n            <Col xs=\"12\" sm>\n                <FormGroup>\n                    <Label>Giorno</Label>\n                    <DatePicker className=\"form-control datepicker_cust\" onChange={changeGiorno} value={giorno} maxDate={oggi}/>\n                </FormGroup>\n            </Col>\n            <Col xs=\"12\" sm=\"auto\" className=\"d-flex align-items-end\">\n                <FormGroup>\n                    <Button disabled={!giorno} onClick={leggiStatistica}>Cerca</Button>\n                </FormGroup>\n            </Col>\n        </Row>\n        <Row>\n            {loading ? <Loading/> :null}\n            {stats && <StatisticaPerDipendenteView stats={stats}/>}\n        </Row>\n    </Container>\n    \n}","import * as React from 'react'\nimport { NavLinkProps, NavLink, DropdownItemProps, DropdownItem } from 'reactstrap'\nimport { useHistory } from 'react-router'\n\nexport const RoutedNavLink : React.FC<NavLinkProps> = ({href,children,...props}) => {\n    const history = useHistory();\n    const go = React.useCallback (() => {\n        href && history.push(href);\n    },[href,history])\n\n    //@ts-ignore\n    return <NavLink  onClick={go} {...props}>{children}</NavLink>\n}\n\nexport const RoutedDropdownItem : React.FC<DropdownItemProps> = ({href,children,...props}) => {\n    const history = useHistory();\n    const go = React.useCallback (() => {\n        href && history.push(href);\n    },[href,history])\n\n    //@ts-ignore\n    return <DropdownItem  onClick={go} {...props}>{children}</DropdownItem>\n}","import * as React from 'react';\nimport { useLogin } from '../GlobalContext';\nimport { Nav, NavItem, Navbar, NavbarBrand, NavbarToggler, UncontrolledDropdown, DropdownToggle, DropdownItem, DropdownMenu, Collapse } from 'reactstrap';\nimport { RoutedNavLink, RoutedDropdownItem } from './RoutedNav';\nimport LoginAPI from '../api/LoginAPI';\n\nexport const Header : React.FC = () => {\n    const [login,setLogin] = useLogin();\n    const [isOpen, setIsOpen] = React.useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const logoutClick = React.useCallback( async ()=>{    \n        try {\n            await LoginAPI.logout();\n        } finally \n        {\n            setLogin({isLoggedIn:false, user:undefined});\n        }\n    },[setLogin])\n\n    const isAdmin = login.isLoggedIn && login.user && login.user.tipo === 'DIRIGENTE';\n    const isOper = login.isLoggedIn && login.user;\n\n    return <Navbar color=\"light\" light expand=\"md\" sticky=\"top\">\n        <NavbarBrand><i className=\"fas fa-cat fa-3x\"></i></NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n       <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            {isOper && <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>Ricerca</DropdownToggle>\n              <DropdownMenu right>\n                <RoutedDropdownItem href=\"/ricerca/titolo\">Ricerca per titolo</RoutedDropdownItem>\n                <DropdownItem divider />\n                <RoutedDropdownItem href=\"/ricerca/genere\">Ricerca per genere</RoutedDropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            }\n            {isOper && \n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Noleggio\n              </DropdownToggle>\n              <DropdownMenu right>\n                <RoutedDropdownItem href=\"/nuovocliente\">Nuovo cliente</RoutedDropdownItem>\n                <DropdownItem divider/>\n                <RoutedDropdownItem href=\"/noleggio/attiva\">Crea contratto di noleggio</RoutedDropdownItem>\n                <DropdownItem divider/>\n                <RoutedDropdownItem href=\"/noleggio/termina\">Termina contratto di noleggio</RoutedDropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            }\n            {isAdmin && \n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>Batch</DropdownToggle>\n              <DropdownMenu right>\n                <RoutedDropdownItem href=\"/batch/carico\">Carico</RoutedDropdownItem>\n                <DropdownItem divider />\n                <RoutedDropdownItem href=\"/batch/scarico\">Scarico</RoutedDropdownItem>\n                <DropdownItem divider />\n                <RoutedDropdownItem href=\"/batch/carico\">Mostra tutte le attività batch</RoutedDropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            }\n            {isAdmin && \n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>Statistiche</DropdownToggle>\n              <DropdownMenu right>\n                <RoutedDropdownItem href=\"/statistiche/dipendente\">Per dipendente del tuo punto vendita</RoutedDropdownItem>\n                <DropdownItem divider />\n                <RoutedDropdownItem href=\"/statistiche\">Per tutti i punti vendita</RoutedDropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            }\n          </Nav>\n          {isOper && \n          <Nav navbar>\n            <UncontrolledDropdown nav inNavbar>\n            <DropdownToggle nav caret>\n            <i className=\"far fa-user-circle\"></i>{login.user!.nome} {login.user!.cognome}\n            </DropdownToggle>\n            <DropdownMenu right>\n            <DropdownItem onClick={logoutClick}>Log out</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n          </Nav>\n          }\n        </Collapse>\n      </Navbar>\n}","import React from 'react';\nimport {Layout} from './components/Layout'\nimport {GlobalContextProvider} from './GlobalContext'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport './App.css';\n\nimport { Login } from './pages/Login';\nimport { PrivateRoute } from './components/PrivateRoute';\nimport { BatchScarico } from './pages/BatchScarico';\nimport { BatchCarico } from './pages/BatchCarico';\nimport { RicercaPerTitolo } from './pages/RicercaPerTitolo';\nimport { Noleggio } from './pages/Noleggio';\nimport { TerminaNoleggio } from './pages/TerminaNoleggio';\nimport { StatisticheDipendente } from './pages/StatisticheDipendente';\nimport { Container } from 'reactstrap';\nimport { Header } from './components/Header';\n\n\nfunction App() {\n  return (\n\n    <Router basename=\"/noleggio/webapp\">\n    <GlobalContextProvider>\n      <Container>\n        <Header/>\n        <Route exact path=\"/login\">\n          <Login/>\n        </Route>\n        <PrivateRoute path=\"/batch/scarico\">\n          <BatchScarico/>\n        </PrivateRoute>\n        <PrivateRoute path=\"/batch/carico\">\n          <BatchCarico/>\n        </PrivateRoute>\n        <PrivateRoute path=\"/ricerca/titolo\">\n          <RicercaPerTitolo/>\n        </PrivateRoute>\n        <PrivateRoute path=\"/noleggio/attiva\">\n          <Noleggio/>\n        </PrivateRoute>\n        <PrivateRoute path=\"/noleggio/termina\">\n          <TerminaNoleggio/>\n        </PrivateRoute>\n        <Route path=\"/statistiche/dipendente\"><StatisticheDipendente/></Route>\n      </Container>\n    </GlobalContextProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress-bar\":\"Steps_progress-bar__3ZWGR\",\"section\":\"Steps_section__2kTmZ\",\"status-bar\":\"Steps_status-bar__22kXB\",\"current-status\":\"Steps_current-status__1RWxy\",\"visited\":\"Steps_visited__1WHz1\",\"changeBackground\":\"Steps_changeBackground__18NKB\",\"current\":\"Steps_current__cNQWZ\"};"],"sourceRoot":""}